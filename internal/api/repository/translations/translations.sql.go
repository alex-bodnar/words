// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.0
// source: translations.sql

package translations

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const create = `-- name: create :one
INSERT INTO translations
    (translation, transcription, language_id)
VALUES
    ($1, $2, $3)
RETURNING id, number, translation, transcription, language_id, translation_ts, created_at, updated_at
`

type createParams struct {
	Translation   string      `db:"translation"`
	Transcription pgtype.Text `db:"transcription"`
	LanguageID    uint64      `db:"language_id"`
}

func (q *Queries) create(ctx context.Context, arg createParams) (Translation, error) {
	row := q.db.QueryRow(ctx, create, arg.Translation, arg.Transcription, arg.LanguageID)
	var i Translation
	err := row.Scan(
		&i.ID,
		&i.Number,
		&i.Translation,
		&i.Transcription,
		&i.LanguageID,
		&i.TranslationTs,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
